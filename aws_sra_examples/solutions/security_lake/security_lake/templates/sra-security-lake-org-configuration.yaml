########################################################################
# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
########################################################################
AWSTemplateFormatVersion: 2010-09-09
Description:
  This template creates a custom resource Lambda to delegate administration and configure Security Lake within an AWS Organization - 'securitylake_org'
  solution in the repo, https://github.com/aws-samples/aws-security-reference-architecture-examples (sra-1ssgnse80)

Metadata:
  SRA:
    Version: 1.0
    Order: 3
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General Properties
        Parameters:
          - pSRASolutionName
          - pSRAStagingS3BucketName
          - pSRAAlarmEmail

      - Label:
          default: Lambda Function Properties
        Parameters:
          - pSecurityLakeOrgLambdaRoleName
          - pSecurityLakeOrgLambdaFunctionName

      - Label:
          default: Custom Resource Properties
        Parameters:
          - pControlTowerRegionsOnly
          # - pSources
          - pSecurityLakeConfigurationRoleName
          - pDelegatedAdminAccountId
          - pEnabledRegions
          - pCreateKmsKey
          - pCloudTrailManagementEvents
          - pCloudTrailLambdaDataEvents
          - pCloudTrailS3DataEvents
          - pSecurityHubFindings
          - pVpcFlowLogs
          - pWafLogs
          - pRoute53Logs
          - pEksAuditLogs
          - pRegisterAuditAccountDataSubscriber
          - pRegisterAuditAccountQuerySubscriber
          - pCreateSubscriber
          - pSubscriberName
          - pSubscriberExternalId
          - pSubscriberRegions
          - pSubscriberDataAccessMethod
          - pSubscriberLogSources
          - pSubscriberPrincipalAccountId
          - pCreateSubscriberNotification
          - pSourceVersion

      - Label:
          default: General Lambda Function Properties
        Parameters:
          - pCreateLambdaLogGroup
          - pLambdaLogGroupRetention
          - pLambdaLogGroupKmsKey
          - pLambdaLogLevel

      - Label:
          default: EventBridge Rule Properties
        Parameters:
          - pComplianceFrequency
          - pControlTowerLifeCycleRuleName
          - pEventRuleRoleName

    ParameterLabels:
      pCloudTrailManagementEvents:
        default: CloudTrail - Management events
      pLogArchiveAccountId:
        default: Log Archive Account ID
      pSourceVersion:
        default: Log Source Version
      pCloudTrailLambdaDataEvents:
        default: CloudTrail - Lambda Data events
      pCloudTrailS3DataEvents:
        default: CloudTrail - S3 Data events
      pSecurityHubFindings:
        default: SecurityHub Findings
      pVpcFlowLogs:
        default: VPC Flow Logs
      pWafLogs:
        default: WAFv2 Logs
      pRoute53Logs:
        default: Amazon Route 53 resolver query logs
      pEksAuditLogs:
        default: Amazon EKS Audit Logs
      pControlTowerRegionsOnly:
        default: Governed Regions Only
      # pSources:
      #   default: Sources
      pSecurityLakeConfigurationRoleName:
        default: Security Lake Configuration Role Name
      pCreateKmsKey:
        default: Create KMS Key
      pComplianceFrequency:
        default: Frequency to Check for Organizational Compliance
      pControlTowerLifeCycleRuleName:
        default: Control Tower Lifecycle Rule Name
      pCreateLambdaLogGroup:
        default: Create Lambda Log Group
      pDelegatedAdminAccountId:
        default: Delegated Admin Account ID
      pEnabledRegions:
        default: (Optional) Enabled Regions
      pEventRuleRoleName:
        default: Event Rule Role Name
      pLambdaLogGroupKmsKey:
        default: (Optional) Lambda Logs KMS Key
      pLambdaLogGroupRetention:
        default: Lambda Log Group Retention
      pLambdaLogLevel:
        default: Lambda Log Level
      pSRAAlarmEmail:
        default: (Optional) SRA Alarm Email
      pSRASolutionName:
        default: SRA Solution Name
      pSRAStagingS3BucketName:
        default: SRA Staging S3 Bucket Name
      pSecurityLakeOrgLambdaFunctionName:
        default: Lambda Function Name
      pSecurityLakeOrgLambdaRoleName:
        default: Lambda Role Name

      pRegisterAuditAccountDataSubscriber:
        default: Register Audit Account as a Subscriber with Data Access
      pRegisterAuditAccountQuerySubscriber:
        default: Register Audit Account as a Subscriber with Query Access
      pCreateSubscriber:
        default: Register a subscriber
      pSubscriberName:
        default: Subscriber Name
      pSubscriberExternalId:
        default: Subscriber External ID
      pSubscriberRegions:
        default: Subscriber Regions
      pSubscriberDataAccessMethod:
        default: Subscriber Data Access Method
      pSubscriberLogSources:
        default: Subscriber Log Sources
      pSubscriberPrincipalAccountId:
        default: Subscriber Principal Account ID
      pCreateSubscriberNotification:
        default: Create Subscriber Notification

Parameters:
  pSourceVersion:
    AllowedValues: [2.0]
    ConstraintDescription: Must be a valid version number. Currently supported version is 2.0
    Description: 'Chose the version of data source from which you want to ingest log and event sources'
    Default: 2.0
    Type: String
  pCloudTrailManagementEvents:
    AllowedPattern: '^($|ALL|(\d{12})(,\s*\d{12})*)$'
    ConstraintDescription: 'Enter "ALL" or a comma-separated list of AWS account numbers without spaces, e.g., "123456789012,234567890123" to create log source. Leave empty to skip log source creation'
    Description:
      Accounts to injest CloudTrail - Management events from. Choose ALL to enable for all accounts in your AWS Organization. To choose the accounts enter a comma
      seperated list of the AWS Account numbers.  Leave empty to skip log source creation.
    Type: CommaDelimitedList
    Default: 'ALL'
  pCloudTrailLambdaDataEvents:
    AllowedPattern: '^($|ALL|(\d{12})(,\s*\d{12})*)$'
    ConstraintDescription: 'Enter "ALL" or a comma-separated list of AWS account numbers without spaces, e.g., "123456789012,234567890123" to create log source. Leave empty to skip log source creation'
    Description:
      Accounts to injest CloudTrail - Lambda Data events from. Choose ALL to enable for all accounts in your AWS Organization. To choose the accounts enter a comma
      seperated list of the AWS Account numbers.  Leave empty to skip log source creation.
    Type: CommaDelimitedList
    Default: 'ALL'
  pCloudTrailS3DataEvents:
    AllowedPattern: '^($|ALL|(\d{12})(,\s*\d{12})*)$'
    ConstraintDescription: 'Enter "ALL" or a comma-separated list of AWS account numbers without spaces, e.g., "123456789012,234567890123" to create log source. Leave empty to skip log source creation'
    Description:
      Accounts to injest CloudTrail - S3 Data events from. Choose ALL to enable for all accounts in your AWS Organization. To choose the accounts enter a comma
      seperated list of the AWS Account numbers.  Leave empty to skip log source creation.
    Type: CommaDelimitedList
    Default: ''
  pSecurityHubFindings:
    AllowedPattern: '^($|ALL|(\d{12})(,\s*\d{12})*)$'
    ConstraintDescription: 'Enter "ALL" or a comma-separated list of AWS account numbers without spaces, e.g., "123456789012,234567890123" to create log source. Leave empty to skip log source creation'
    Description:
      Accounts to injest SecurityHub Findings from. Choose ALL to enable for all accounts in your AWS Organization. To choose the accounts enter a comma
      seperated list of the AWS Account numbers.  Leave empty to skip log source creation.
    Type: CommaDelimitedList
    Default: 'ALL'
  pVpcFlowLogs:
    AllowedPattern: '^($|ALL|(\d{12})(,\s*\d{12})*)$'
    ConstraintDescription: 'Enter "ALL" or a comma-separated list of AWS account numbers without spaces, e.g., "123456789012,234567890123" to create log source. Leave empty to skip log source creation'
    Description:
      Accounts to injest VPC Flow Logs from. Choose ALL to enable for all accounts in your AWS Organization. To choose the accounts enter a comma
      seperated list of the AWS Account numbers.  Leave empty to skip log source creation.
    Type: CommaDelimitedList
    Default: 'ALL'
  pWafLogs:
    AllowedPattern: '^($|ALL|(\d{12})(,\s*\d{12})*)$'
    ConstraintDescription: 'Enter "ALL" or a comma-separated list of AWS account numbers without spaces, e.g., "123456789012,234567890123" to create log source. Leave empty to skip log source creation'
    Description:
      Accounts to injest WAFv2 Logs from. Choose ALL to enable for all accounts in your AWS Organization. To choose the accounts enter a comma
      seperated list of the AWS Account numbers.  Leave empty to skip log source creation.
    Type: CommaDelimitedList
    Default: ''
  pRoute53Logs:
    AllowedPattern: '^($|ALL|(\d{12})(,\s*\d{12})*)$'
    ConstraintDescription: 'Enter "ALL" or a comma-separated list of AWS account numbers without spaces, e.g., "123456789012,234567890123" to create log source. Leave empty to skip log source creation'
    Description:
      Accounts to injest Amazon Route 53 resolver query logs from. Choose ALL to enable for all accounts in your AWS Organization. To choose the accounts enter a comma
      seperated list of the AWS Account numbers.  Leave empty to skip log source creation.
    Type: CommaDelimitedList
    Default: 'ALL'
  pEksAuditLogs:
    AllowedPattern: '^($|ALL|(\d{12})(,\s*\d{12})*)$'
    ConstraintDescription: 'Enter "ALL" or a comma-separated list of AWS account numbers without spaces, e.g., "123456789012,234567890123" to create log source. Leave empty to skip log source creation'
    Description:
      Accounts to injest Amazon EKS Audit Logs from. Choose ALL to enable for all accounts in your AWS Organization. To choose the accounts enter a comma
      seperated list of the AWS Account numbers.  Leave empty to skip log source creation.
    Type: CommaDelimitedList
    Default: 'ALL'
  pControlTowerRegionsOnly:
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description: Only enable in the customer governed regions specified in Control Tower or Common Prerequisites solution
    Type: String
  # pSources:
  #   AllowedValues: ['', ROUTE53, VPC_FLOW, SH_FINDINGS, CLOUD_TRAIL_MGMT, LAMBDA_EXECUTION, S3_DATA, EKS_AUDIT, WAF]
  #   Default: ROUTE53, VPC_FLOW, SH_FINDINGS, CLOUD_TRAIL_MGMT, LAMBDA_EXECUTION, S3_DATA, EKS_AUDIT, WAF
  #   Description: AWS log sources to ingest in all accounts
  #   Type: CommaDelimitedList
  pCreateKmsKey:
    AllowedValues: [true, false]
    Default: true
    Description: (Optional) TODO
    Type: String
  pComplianceFrequency:
    ConstraintDescription: Compliance Frequency must be a number between 1 and 30, inclusive.
    Default: 7
    Description: Frequency (in days between 1 and 30, default is 7) to check organizational compliance
    MinValue: 1
    MaxValue: 30
    Type: Number
  pControlTowerLifeCycleRuleName:
    AllowedPattern: '^[\w.-]{1,64}$'
    ConstraintDescription: Max 64 alphanumeric and underscore characters. Also special characters supported [., -]
    Default: sra-security-lake-org-trigger
    Description: The name of the AWS Control Tower Life Cycle Rule.
    Type: String
  pCreateLambdaLogGroup:
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description:
      Indicates whether a CloudWatch Log Group should be explicitly created for the Lambda function, to allow for setting a Log Retention and/or KMS
      Key for encryption.
    Type: String
  pDelegatedAdminAccountId:
    AllowedPattern: '^\d{12}$'
    ConstraintDescription: Must be 12 digits
    Description: Delegated administrator account ID - Log Archive todo
    Type: String
  pEnabledRegions:
    AllowedPattern: '^$|^([a-z0-9-]{1,64})$|^(([a-z0-9-]{1,64},)*[a-z0-9-]{1,64})$'
    ConstraintDescription:
      Only lowercase letters, numbers, and hyphens ('-') allowed. (e.g. us-east-1) Additional AWS regions can be provided, separated by commas. (e.g.
      us-east-1,ap-southeast-2)
    Description: (Optional) Enabled regions (AWS regions, separated by commas). Leave blank to enable all regions.
    Type: String
  pEventRuleRoleName:
    AllowedPattern: '^[\w+=,.@-]{1,64}$'
    ConstraintDescription: Max 64 alphanumeric characters. Also special characters supported [+, =, ., @, -].
    Default: sra-security-lake-global-events
    Description: Event rule role name for putting events on the home region event bus
    Type: String
  pSecurityLakeOrgLambdaFunctionName:
    AllowedPattern: '^[\w-]{0,64}$'
    ConstraintDescription: Max 64 alphanumeric characters. Also special characters supported [_, -]
    Default: sra-security-lake-org
    Description: Lambda function name
    Type: String
  pSecurityLakeOrgLambdaRoleName:
    AllowedPattern: '^[\w+=,.@-]{1,64}$'
    ConstraintDescription: Max 64 alphanumeric characters. Also special characters supported [+, =, ., @, -]
    Default: sra-security-lake-org-lambda
    Description: SecurityLake configuration Lambda role name
    Type: String
  pSecurityLakeConfigurationRoleName:
    AllowedPattern: '^[\w+=,.@-]{1,64}$'
    ConstraintDescription: Max 64 alphanumeric characters. Also special characters supported [+, =, ., @, -]
    Default: sra-security-lake-configuration
    Description: SecurityLake Configuration role to assume in the delegated administrator account
    Type: String
  pLambdaLogGroupKmsKey:
    AllowedPattern: '^$|^arn:(aws[a-zA-Z-]*){1}:kms:[a-z0-9-]+:\d{12}:key\/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$'
    ConstraintDescription: 'Key ARN example:  arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab'
    Description:
      (Optional) KMS Key ARN to use for encrypting the Lambda logs data. If empty, encryption is enabled with CloudWatch Logs managing the server-side
      encryption keys.
    Type: String
  pLambdaLogGroupRetention:
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
    Default: 14
    Description: Specifies the number of days you want to retain log events
    Type: String
  pLambdaLogLevel:
    AllowedValues: [INFO, ERROR, DEBUG]
    Default: INFO
    Description: Lambda Function Logging Level
    Type: String
  pSRAAlarmEmail:
    AllowedPattern: '^$|^([a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+)$'
    ConstraintDescription: Must be a valid email address.
    Description: (Optional) Email address for receiving DLQ alarms
    Type: String
  pSRASolutionName:
    AllowedValues: [sra-security-lake]
    Default: sra-security-lake
    Description: The SRA solution name. The default value is the folder name of the solution
    Type: String
  pSRAStagingS3BucketName:
    AllowedPattern: '^(?=^.{3,63}$)(?!.*[.-]{2})(?!.*[--]{2})(?!^(?:(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])(\.(?!$)|$)){4}$)(^(([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])\.)*([a-z0-9]|[a-z0-9][a-z0-9\-]*[a-z0-9])$)'
    ConstraintDescription:
      SRA Staging S3 bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Description:
      SRA Staging S3 bucket name for the artifacts relevant to solution. (e.g., lambda zips, CloudFormation templates) S3 bucket name can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Type: String

  pRegisterAuditAccountDataSubscriber:
    AllowedValues: ['true', 'false']
    Default: 'true'
    Description: Identifies whether to register Audit Account as a Subscriber with Data Access
    Type: String
  pRegisterAuditAccountQuerySubscriber:
    AllowedValues: ['true', 'false']
    Default: 'true'
    Description: Identifies whether to register Audit Account as a Subscriber with Query Access
    Type: String
  pCreateSubscriber:
    AllowedValues: ['true', 'false']
    Default: 'false'
    Description: Identifies whether to register a new Subscriber
    Type: String
  pSubscriberName:
    AllowedPattern: '^$|^[a-zA-Z][-a-zA-Z0-9]*$'
    ConstraintDescription: Subscriber name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: ''
    Description: (Optional) Name for Security Lake subscriber. If 'Register a subscriber' parameter is set to 'true', then this parameter becomes required.
    Type: String
  pSubscriberExternalId:
    AllowedPattern: '^$|^[a-zA-Z0-9-]{1,64}$'
    ConstraintDescription: Max 64 alphanumeric and underscore characters. Also special characters supported [., -]
    Default: ''
    Description: (Optional) External ID for Security Lake subscriber. If 'Register a subscriber' parameter is set to 'true', then this parameter becomes required.
    Type: String
  pSubscriberRegions:
    AllowedPattern: '^$|^([a-z0-9-]{1,64})$|^(([a-z0-9-]{1,64},)*[a-z0-9-]{1,64})$'
    ConstraintDescription:
      Only lowercase letters, numbers, and hyphens ('-') allowed. (e.g. us-east-1) Additional AWS regions can be provided, separated by commas. (e.g.
      us-east-1,ap-southeast-2)
    Default: ''
    Description: (Optional) Subscriber regions (AWS regions, separated by commas). Leave blank to enable all regions.
    Type: String
  pSubscriberDataAccessMethod:
    AllowedValues: ['LAKEFORMATION', 'S3']
    Default: 'S3'
    ConstraintDescription: (Optional) Must be a valid Data Access Method. If 'Register a subscriber' parameter is set to 'true', then this parameter becomes required.
    Type: String
  pSubscriberLogSources:
    AllowedValues: [ROUTE53, VPC_FLOW, SH_FINDINGS, CLOUD_TRAIL_MGMT, LAMBDA_EXECUTION, S3_DATA, EKS_AUDIT, WAF]
    Default: ROUTE53, VPC_FLOW, SH_FINDINGS, CLOUD_TRAIL_MGMT, LAMBDA_EXECUTION, S3_DATA, EKS_AUDIT, WAF
    Description: (Optional) Log sources subscriber can access. If 'Register a subscriber' parameter is set to 'true', then this parameter becomes required.
    Type: CommaDelimitedList
  pSubscriberPrincipalAccountId:
    AllowedPattern: '^\d{12}$'
    Default: 222222222222
    ConstraintDescription: Must be 12 digits.
    Description: (Optional) AWS Account ID of the Subscriber principal. If 'Register a subscriber' parameter is set to 'true', then this parameter becomes required.
    Type: String
  pCreateSubscriberNotification:
    AllowedValues: ['ignore', 'SQS']
    Default: 'ignore'
    Description: (Optional) Choose 'SQS' to create a new Subscriber Notification. Choose 'ignore' to skip Subscriber Notification creation.
    Type: String

Conditions:
  cComplianceFrequencySingleDay: !Equals [!Ref pComplianceFrequency, 1]
  cCreateDLQAlarm: !Not [!Equals [!Ref pSRAAlarmEmail, '']]
  cCreateLambdaLogGroup: !Equals [!Ref pCreateLambdaLogGroup, 'true']
  cUseGraviton: !Or
    - !Equals [!Ref 'AWS::Region', ap-northeast-1]
    - !Equals [!Ref 'AWS::Region', ap-south-1]
    - !Equals [!Ref 'AWS::Region', ap-southeast-1]
    - !Equals [!Ref 'AWS::Region', ap-southeast-2]
    - !Equals [!Ref 'AWS::Region', eu-central-1]
    - !Equals [!Ref 'AWS::Region', eu-west-1]
    - !Equals [!Ref 'AWS::Region', eu-west-2]
    - !Equals [!Ref 'AWS::Region', us-east-1]
    - !Equals [!Ref 'AWS::Region', us-east-2]
    - !Equals [!Ref 'AWS::Region', us-west-2]
  cUseKmsKey: !Not [!Equals [!Ref pLambdaLogGroupKmsKey, '']]
  cNotGlobalRegionUsEast1: !Not [!Equals [!Ref 'AWS::Region', us-east-1]]  # todo: validate expiration days is > storage class change days

Resources:
  rSecurityLakeOrgLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: cCreateLambdaLogGroup
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${pSecurityLakeOrgLambdaFunctionName}
      KmsKeyId: !If
        - cUseKmsKey
        - !Ref pLambdaLogGroupKmsKey
        - !Ref AWS::NoValue
      RetentionInDays: !Ref pLambdaLogGroupRetention

  rSecurityLakeOrgLambdaRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: Actions require wildcard in resource
          - id: W28
            reason: The role name is defined
      checkov:
        skip:
          - id: CKV_AWS_111
            comment: IAM write actions require wildcard in resource
    Properties:
      RoleName: !Ref pSecurityLakeOrgLambdaRoleName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Path: '/'
      Policies:
        - PolicyName: sra-security-lake-org-policy-cloudformation
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CloudFormation
                Effect: Allow
                Action: cloudformation:ListStackInstances
                Resource: !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stackset/AWSControlTowerBP-*
        - PolicyName: sra-security-lake-org-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: SecurityLakeAccess
                Effect: Allow
                Action:
                  - detective:EnableOrganizationAdminAccount
                  - detective:DisableOrganizationAdminAccount
                  - detective:ListOrganizationAdminAccount
                Resource: '*'
        - PolicyName: admin-access
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"
        - PolicyName: "ssm-access"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource:
                  - !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/sra*"

              - Sid: AllowReadIamActions
                Effect: Allow
                Action: iam:GetRole
                Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/*

              - Sid: AllowCreateServiceLinkedRole
                Effect: Allow
                Action: iam:CreateServiceLinkedRole
                Condition:
                  StringLike:
                    iam:AWSServiceName: securitylake.amazonaws.com
                Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/securitylake.amazonaws.com/AWSServiceRoleForSecurityLake

              - Sid: AllowPolicyActions
                Effect: Allow
                Action: iam:PutRolePolicy
                Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/securitylake.amazonaws.com/AWSServiceRoleForSecurityLake

              - Sid: AllowDeleteServiceLinkedRole
                Effect: Allow
                Action: iam:DeleteServiceLinkedRole
                Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/securitylake.amazonaws.com/AWSServiceRoleForSecurityLake

        - PolicyName: sra-security-lake-org-policy-logs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: CreateLogGroupAndEvents
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${pSecurityLakeOrgLambdaFunctionName}:log-stream:*

        - PolicyName: sra-security-lake-org-policy-organizations
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: OrganizationsReadAccess
                Effect: Allow
                Action:
                  - organizations:DescribeOrganization
                  - organizations:ListAWSServiceAccessForOrganization
                  - organizations:ListAccounts
                  - organizations:ListDelegatedAdministrators
                Resource: '*'

              - Sid: AWSServiceAccess
                Effect: Allow
                Action:
                  - organizations:DisableAWSServiceAccess
                  - organizations:EnableAWSServiceAccess
                Condition:
                  StringLikeIfExists:
                    organizations:ServicePrincipal: security-lake.amazonaws.com
                Resource: '*'

              - Sid: RegisterDeregisterDelegatedAdministrator
                Effect: Allow
                Action:
                  - organizations:DeregisterDelegatedAdministrator
                  - organizations:RegisterDelegatedAdministrator
                Resource: '*'

        - PolicyName: sra-security-lake-org-policy-sqs
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: SQSSendMessage
                Effect: Allow
                Action: sqs:SendMessage
                Resource: !GetAtt rSecurityLakeOrgDLQ.Arn
      Tags:
        - Key: sra-solution
          Value: !Ref pSRASolutionName

  rSecurityLakeOrgLambdaFunction:
    Type: AWS::Lambda::Function
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W58
            reason: CloudWatch access provided by the attached IAM role
          - id: W89
            reason: Lambda is not deployed within a VPC
          - id: W92
            reason: Lambda does not need reserved concurrent executions.
      checkov:
        skip:
          - id: CKV_AWS_115
            comment: Lambda does not need reserved concurrent executions.
          - id: CKV_AWS_117
            comment: Lambda does not need to communicate with VPC resources.
          - id: CKV_AWS_173
            comment: Environment variables are not sensitive.
    Properties:
      FunctionName: !Ref pSecurityLakeOrgLambdaFunctionName
      Description: configure SecurityLake for the Organization
      Architectures: !If
        - cUseGraviton
        - [arm64]
        - !Ref AWS::NoValue
      Handler: app.lambda_handler
      Role: !GetAtt rSecurityLakeOrgLambdaRole.Arn
      MemorySize: 512
      Runtime: python3.11
      Timeout: 900
      Code:
        S3Bucket: !Ref pSRAStagingS3BucketName
        S3Key: !Sub ${pSRASolutionName}/lambda_code/${pSRASolutionName}.zip
      Layers:
        - !Ref rSecurityLakeOrgLambdaLayer
      DeadLetterConfig:
        TargetArn: !GetAtt rSecurityLakeOrgDLQ.Arn
      Environment:
        Variables:
          LOG_LEVEL: !Ref pLambdaLogLevel
          AWS_PARTITION: !Ref AWS::Partition
          CONFIGURATION_ROLE_NAME: !Ref pSecurityLakeConfigurationRoleName
          CONTROL_TOWER_REGIONS_ONLY: !Ref pControlTowerRegionsOnly
          # SOURCES: !Join
          #   - ','
          #   - !Ref pSources
          DELEGATED_ADMIN_ACCOUNT_ID: !Ref pDelegatedAdminAccountId
          ENABLED_REGIONS: !Ref pEnabledRegions
          MANAGEMENT_ACCOUNT_ID: !Ref AWS::AccountId
          CREATE_KMS_KEY: !Ref pCreateKmsKey
          SOURCE_VERSION: !Ref pSourceVersion
          CLOUD_TRAIL_MGMT: !Join
            - ','
            - !Ref pCloudTrailManagementEvents
          LAMBDA_EXECUTION: !Join
              - ','
              - !Ref pCloudTrailLambdaDataEvents
          S3_DATA: !Join
              - ','
              - !Ref pCloudTrailS3DataEvents
          ROUTE53: !Join
              - ','
              - !Ref pRoute53Logs
          VPC_FLOW: !Join
              - ','
              - !Ref pVpcFlowLogs
          SH_FINDINGS: !Join
              - ','
              - !Ref pSecurityHubFindings
          EKS_AUDIT: !Join
              - ','
              - !Ref pEksAuditLogs
          WAF: !Join
              - ','
              - !Ref pWafLogs
          SET_AUDIT_ACCT_DATA_SUBSCRIBER: !Ref pRegisterAuditAccountDataSubscriber
          SET_AUDIT_ACCT_QUERY_SUBSCRIBER: !Ref pRegisterAuditAccountQuerySubscriber
          CREATE_SUBSCRIBER: !Ref pCreateSubscriber
          SUBSCRIBER_NAME: !Ref pSubscriberName
          EXTERNAL_ID: !Ref pSubscriberExternalId
          SUBSCRIBER_REGIONS: !Ref pSubscriberRegions
          DATA_ACCESS_METHOD: !Ref pSubscriberDataAccessMethod
          SUBSCRIBER_LOG_SOURCES: !Join
              - ','
              - !Ref pSubscriberLogSources
          SUBSCRIBER_ACCT: !Ref pSubscriberPrincipalAccountId
          CREATE_NOTIFICATION: !Ref pCreateSubscriberNotification
      Tags:
        - Key: sra-solution
          Value: !Ref pSRASolutionName

  rSecurityLakeOrgLambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket: !Ref pSRAStagingS3BucketName
        S3Key: !Sub ${pSRASolutionName}/layer_code/${pSRASolutionName}-layer.zip
      Description: Boto3 version 1.26.24 layer to enable newer API of security lake
      LayerName: !Sub ${pSecurityLakeOrgLambdaFunctionName}-updated-boto3-layer

  rSecurityLakeOrgLambdaCustomResource:
    Type: Custom::LambdaCustomResource
    Version: '1.0'
    Properties:
      ServiceToken: !GetAtt rSecurityLakeOrgLambdaFunction.Arn
      LOG_LEVEL: !Ref pLambdaLogLevel
      CONFIGURATION_ROLE_NAME: !Ref pSecurityLakeConfigurationRoleName
      CONTROL_TOWER_REGIONS_ONLY: !Ref pControlTowerRegionsOnly
      # SOURCES: !Join
      #   - ','
      #   - !Ref pSources
      DELEGATED_ADMIN_ACCOUNT_ID: !Ref pDelegatedAdminAccountId
      ENABLED_REGIONS: !Ref pEnabledRegions
      MANAGEMENT_ACCOUNT_ID: !Ref AWS::AccountId
      CREATE_KMS_KEY: !Ref pCreateKmsKey
      AWS_PARTITION: !Ref AWS::Partition
      SOURCE_VERSION: !Ref pSourceVersion
      CLOUD_TRAIL_MGMT: !Join
          - ','
          - !Ref pCloudTrailManagementEvents
      LAMBDA_EXECUTION: !Join
          - ','
          - !Ref pCloudTrailLambdaDataEvents
      S3_DATA: !Join
          - ','
          - !Ref pCloudTrailS3DataEvents
      ROUTE53: !Join
          - ','
          - !Ref pRoute53Logs
      VPC_FLOW: !Join
          - ','
          - !Ref pVpcFlowLogs
      SH_FINDINGS: !Join
          - ','
          - !Ref pSecurityHubFindings
      EKS_AUDIT: !Join
          - ','
          - !Ref pEksAuditLogs
      WAF: !Join
          - ','
          - !Ref pWafLogs
      SET_AUDIT_ACCT_DATA_SUBSCRIBER: !Ref pRegisterAuditAccountDataSubscriber
      SET_AUDIT_ACCT_QUERY_SUBSCRIBER: !Ref pRegisterAuditAccountQuerySubscriber
      CREATE_SUBSCRIBER: !Ref pCreateSubscriber
      SUBSCRIBER_NAME: !Ref pSubscriberName
      EXTERNAL_ID: !Ref pSubscriberExternalId
      SUBSCRIBER_REGIONS: !Ref pSubscriberRegions
      DATA_ACCESS_METHOD: !Ref pSubscriberDataAccessMethod
      SUBSCRIBER_LOG_SOURCES: !Join
          - ','
          - !Ref pSubscriberLogSources
      SUBSCRIBER_ACCT: !Ref pSubscriberPrincipalAccountId
      CREATE_NOTIFICATION: !Ref pCreateSubscriberNotification

  rSecurityLakeOrgDLQ:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: alias/aws/sqs
      QueueName: !Sub ${pSRASolutionName}-dlq
      Tags:
        - Key: sra-solution
          Value: !Ref pSRASolutionName
      MessageRetentionPeriod: 345600
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete

  rSecurityLakeOrgDLQPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref rSecurityLakeOrgDLQ
      PolicyDocument:
        Statement:
          - Action: SQS:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn:
                  - !GetAtt rSecurityLakeOrgLambdaFunction.Arn
            Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Resource:
              - !GetAtt rSecurityLakeOrgDLQ.Arn

  rSecurityLakeOrgDLQAlarmTopic:
    Condition: cCreateDLQAlarm
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub ${pSRASolutionName}-dlq-alarm
      KmsMasterKeyId: !Sub arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/sns
      TopicName: !Sub ${pSRASolutionName}-dlq-alarm
      Subscription:
        - Endpoint: !Ref pSRAAlarmEmail
          Protocol: email
      Tags:
        - Key: sra-solution
          Value: !Ref pSRASolutionName

  rSecurityLakeOrgDLQAlarm:
    Condition: cCreateDLQAlarm
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: SRA DLQ alarm if the queue depth is 1
      Namespace: AWS/SQS
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
        - Name: QueueName
          Value: !GetAtt rSecurityLakeOrgDLQ.QueueName
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref rSecurityLakeOrgDLQAlarmTopic
      InsufficientDataActions:
        - !Ref rSecurityLakeOrgDLQAlarmTopic

  rPermissionForScheduledComplianceRuleToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt rSecurityLakeOrgLambdaFunction.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt rScheduledComplianceRule.Arn

  rScheduledComplianceRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub ${pControlTowerLifeCycleRuleName}-organization-compliance
      Description: SRA SecurityLake Trigger for scheduled organization compliance
      ScheduleExpression: !If
        - cComplianceFrequencySingleDay
        - !Sub rate(${pComplianceFrequency} day)
        - !Sub rate(${pComplianceFrequency} days)
      State: ENABLED
      Targets:
        - Arn: !GetAtt rSecurityLakeOrgLambdaFunction.Arn
          Id: !Ref pSecurityLakeOrgLambdaFunctionName

  rCrossRegionEventRuleRole:
    Type: AWS::IAM::Role
    Condition: cNotGlobalRegionUsEast1
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: Specific role name provided
    Properties:
      RoleName: !Ref pEventRuleRoleName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - events.amazonaws.com
      Policies:
        - PolicyName: sra-account-alternate-contacts-policy-events
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: events:PutEvents
                Resource: !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:event-bus/default

Outputs:
  oSecurityLakeOrgLambdaFunctionArn:
    Description: SRA SecurityLake Lambda Function ARN
    Value: !GetAtt rSecurityLakeOrgLambdaFunction.Arn
  oSecurityLakeOrgLambdaLogGroupArn:
    Condition: cCreateLambdaLogGroup
    Description: SRA SecurityLake Lambda Log Group ARN
    Value: !GetAtt rSecurityLakeOrgLambdaLogGroup.Arn
  oSecurityLakeOrgLambdaRoleArn:
    Description: SRA SecurityLake Lambda Role ARN
    Value: !GetAtt rSecurityLakeOrgLambdaRole.Arn
